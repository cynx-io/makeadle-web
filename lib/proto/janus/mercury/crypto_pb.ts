// @generated by protoc-gen-es v2.5.2 with parameter "target=ts"
// @generated from file mercury/crypto.proto (package crypto, syntax proto3)
/* eslint-disable */

import type {
  GenFile,
  GenMessage,
  GenService,
} from "@bufbuild/protobuf/codegenv2";
import {
  fileDesc,
  messageDesc,
  serviceDesc,
} from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file mercury/crypto.proto.
 */
export const file_mercury_crypto: GenFile =
  /*@__PURE__*/
  fileDesc(
    "ChRtZXJjdXJ5L2NyeXB0by5wcm90bxIGY3J5cHRvIioKDEJhc2VSZXNwb25zZRIMCgRjb2RlGAEgASgJEgwKBGRlc2MYAiABKAkiIgoRU2VhcmNoQ29pblJlcXVlc3QSDQoFcXVlcnkYASABKAkiXwoSU2VhcmNoQ29pblJlc3BvbnNlEiIKBGJhc2UYASABKAsyFC5jcnlwdG8uQmFzZVJlc3BvbnNlEiUKBWNvaW5zGAIgAygLMhYuY3J5cHRvLkNvaW5TZWFyY2hEYXRhIlgKDkNvaW5TZWFyY2hEYXRhEgoKAmlkGAEgASgJEgwKBG5hbWUYAiABKAkSDgoGc3ltYm9sGAMgASgJEg0KBXRodW1iGAQgASgJEg0KBWxhcmdlGAUgASgJIiUKEkdldENvaW5SaXNrUmVxdWVzdBIPCgdjb2luX2lkGAEgASgJIqkCChNHZXRDb2luUmlza1Jlc3BvbnNlEiIKBGJhc2UYASABKAsyFC5jcnlwdG8uQmFzZVJlc3BvbnNlEiUKCnRva2VuX2luZm8YAiABKAsyES5jcnlwdG8uVG9rZW5JbmZvEiUKCnJpc2tfZmxhZ3MYAyABKAsyES5jcnlwdG8uUmlza0ZsYWdzEicKC2hvbGRlcl9pbmZvGAQgASgLMhIuY3J5cHRvLkhvbGRlckluZm8SJwoLc29jaWFsX2luZm8YBSABKAsyEi5jcnlwdG8uU29jaWFsSW5mbxInCgttYXJrZXRfaW5mbxgGIAEoCzISLmNyeXB0by5NYXJrZXRJbmZvEiUKCnJpc2tfc2NvcmUYByABKAsyES5jcnlwdG8uUmlza1Njb3JlIi8KCVJpc2tTY29yZRINCgVzY29yZRgBIAEoDRITCgtkZXNjcmlwdGlvbhgCIAEoCSKMAQoJVG9rZW5JbmZvEgwKBG5hbWUYASABKAkSDgoGc3ltYm9sGAIgASgJEhgKEGNvbnRyYWN0X2FkZHJlc3MYAyABKAkSEAoIbG9nb191cmwYBCABKAkSDQoFY2hhaW4YBSABKAkSFAoMdG90YWxfc3VwcGx5GAYgASgBEhAKCGRlY2ltYWxzGAcgASgNIsQDCglSaXNrRmxhZ3MSLAoJZnVuY3Rpb25zGAEgASgLMhkuY3J5cHRvLlJpc2tGbGFnRnVuY3Rpb25zEi0KE293bmVyc2hpcF9yZW5vdW5jZWQYAiABKAsyEC5jcnlwdG8uUmlza0ZsYWcSKwoRdmVyaWZpZWRfY29udHJhY3QYAyABKAsyEC5jcnlwdG8uUmlza0ZsYWcSJQoLaXNfaG9uZXlwb3QYBCABKAsyEC5jcnlwdG8uUmlza0ZsYWcSKgoQbGlxdWlkaXR5X2xvY2tlZBgFIAEoCzIQLmNyeXB0by5SaXNrRmxhZxIrChFyZWNlbnRfZGVwbG95bWVudBgGIAEoCzIQLmNyeXB0by5SaXNrRmxhZxIiCghpc19wcm94eRgHIAEoCzIQLmNyeXB0by5SaXNrRmxhZxIoCg5pc19vcGVuX3NvdXJjZRgIIAEoCzIQLmNyeXB0by5SaXNrRmxhZxInCg1pc19hbnRpX3doYWxlGAkgASgLMhAuY3J5cHRvLlJpc2tGbGFnEicKDWlzX2dhc19hYnVzZXIYCiABKAsyEC5jcnlwdG8uUmlza0ZsYWcSDQoFbm90ZXMYMiABKAkilQMKEVJpc2tGbGFnRnVuY3Rpb25zEh4KBG1pbnQYASABKAsyEC5jcnlwdG8uUmlza0ZsYWcSHwoFb3duZXIYAiABKAsyEC5jcnlwdG8uUmlza0ZsYWcSHwoFcGF1c2UYAyABKAsyEC5jcnlwdG8uUmlza0ZsYWcSIQoHdW5wYXVzZRgEIAEoCzIQLmNyeXB0by5SaXNrRmxhZxIpCg9zZXRfZmVlX3BlcmNlbnQYBSABKAsyEC5jcnlwdG8uUmlza0ZsYWcSLAoSdHJhbnNmZXJfb3duZXJzaGlwGAYgASgLMhAuY3J5cHRvLlJpc2tGbGFnEiwKEnJlbm91bmNlX293bmVyc2hpcBgHIAEoCzIQLmNyeXB0by5SaXNrRmxhZxIqChBkaXNhYmxlX3RyYW5zZmVyGAggASgLMhAuY3J5cHRvLlJpc2tGbGFnEiMKCWJsYWNrbGlzdBgJIAEoCzIQLmNyeXB0by5SaXNrRmxhZxIjCgl3aGl0ZWxpc3QYCiABKAsyEC5jcnlwdG8uUmlza0ZsYWciOwoIUmlza0ZsYWcSDQoFdmFsdWUYASABKAgSEAoIc2V2ZXJpdHkYAiABKA0SDgoGcmVhc29uGAMgASgJIu0BCgpIb2xkZXJJbmZvEiEKGXRvcF90ZW5faG9sZGVyX3BlcmNlbnRhZ2UYASABKAESHwoHaG9sZGVycxgCIAMoCzIOLmNyeXB0by5Ib2xkZXISJAocdG9wX3Rlbl9scF9ob2xkZXJfcGVyY2VudGFnZRgDIAEoARIiCgpscF9ob2xkZXJzGAQgAygLMg4uY3J5cHRvLkhvbGRlchIcChRscF9sb2NrZWRfcGVyY2VudGFnZRgFIAEoARIZChFscF9sb2NrZWRfYmFsYW5jZRgGIAEoARIYChBscF90b3RhbF9iYWxhbmNlGAcgASgBIlEKBkhvbGRlchIPCgdhZGRyZXNzGAEgASgJEhIKCnBlcmNlbnRhZ2UYAiABKAESDwoHYmFsYW5jZRgDIAEoARIRCglpc19sb2NrZWQYBCABKAgiYwoKU29jaWFsSW5mbxIPCgd3ZWJzaXRlGAEgASgJEg4KBmdpdGh1YhgCIAEoCRIPCgd0d2l0dGVyGAMgASgJEg4KBnJlZGRpdBgEIAEoCRITCgtkZXNjcmlwdGlvbhgFIAEoCSLIAQoKTWFya2V0SW5mbxISCgptYXJrZXRfY2FwGAEgASgBEhIKCnZvbHVtZV8yNGgYAiABKAESDQoFcHJpY2UYAyABKAESGAoQcHJpY2VfY2hhbmdlXzI0aBgEIAEoARIjChtwcmljZV9jaGFuZ2VfcGVyY2VudGFnZV8yNGgYBSABKAESGgoSY2lyY3VsYXRpbmdfc3VwcGx5GAYgASgBEhQKDHRvdGFsX3N1cHBseRgHIAEoARISCgptYXhfc3VwcGx5GAggASgBMqcBChRNZXJjdXJ5Q3J5cHRvU2VydmljZRJFCgpTZWFyY2hDb2luEhkuY3J5cHRvLlNlYXJjaENvaW5SZXF1ZXN0GhouY3J5cHRvLlNlYXJjaENvaW5SZXNwb25zZSIAEkgKC0dldENvaW5SaXNrEhouY3J5cHRvLkdldENvaW5SaXNrUmVxdWVzdBobLmNyeXB0by5HZXRDb2luUmlza1Jlc3BvbnNlIgBCGloYbWVyY3VyeS9hcGkvcHJvdG8vY3J5cHRvYgZwcm90bzM",
  );

/**
 * @generated from message crypto.BaseResponse
 */
export type BaseResponse = Message<"crypto.BaseResponse"> & {
  /**
   * @generated from field: string code = 1;
   */
  code: string;

  /**
   * @generated from field: string desc = 2;
   */
  desc: string;
};

/**
 * Describes the message crypto.BaseResponse.
 * Use `create(BaseResponseSchema)` to create a new message.
 */
export const BaseResponseSchema: GenMessage<BaseResponse> =
  /*@__PURE__*/
  messageDesc(file_mercury_crypto, 0);

/**
 * @generated from message crypto.SearchCoinRequest
 */
export type SearchCoinRequest = Message<"crypto.SearchCoinRequest"> & {
  /**
   * @generated from field: string query = 1;
   */
  query: string;
};

/**
 * Describes the message crypto.SearchCoinRequest.
 * Use `create(SearchCoinRequestSchema)` to create a new message.
 */
export const SearchCoinRequestSchema: GenMessage<SearchCoinRequest> =
  /*@__PURE__*/
  messageDesc(file_mercury_crypto, 1);

/**
 * @generated from message crypto.SearchCoinResponse
 */
export type SearchCoinResponse = Message<"crypto.SearchCoinResponse"> & {
  /**
   * @generated from field: crypto.BaseResponse base = 1;
   */
  base?: BaseResponse;

  /**
   * @generated from field: repeated crypto.CoinSearchData coins = 2;
   */
  coins: CoinSearchData[];
};

/**
 * Describes the message crypto.SearchCoinResponse.
 * Use `create(SearchCoinResponseSchema)` to create a new message.
 */
export const SearchCoinResponseSchema: GenMessage<SearchCoinResponse> =
  /*@__PURE__*/
  messageDesc(file_mercury_crypto, 2);

/**
 * @generated from message crypto.CoinSearchData
 */
export type CoinSearchData = Message<"crypto.CoinSearchData"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string symbol = 3;
   */
  symbol: string;

  /**
   * @generated from field: string thumb = 4;
   */
  thumb: string;

  /**
   * @generated from field: string large = 5;
   */
  large: string;
};

/**
 * Describes the message crypto.CoinSearchData.
 * Use `create(CoinSearchDataSchema)` to create a new message.
 */
export const CoinSearchDataSchema: GenMessage<CoinSearchData> =
  /*@__PURE__*/
  messageDesc(file_mercury_crypto, 3);

/**
 * @generated from message crypto.GetCoinRiskRequest
 */
export type GetCoinRiskRequest = Message<"crypto.GetCoinRiskRequest"> & {
  /**
   * @generated from field: string coin_id = 1;
   */
  coinId: string;
};

/**
 * Describes the message crypto.GetCoinRiskRequest.
 * Use `create(GetCoinRiskRequestSchema)` to create a new message.
 */
export const GetCoinRiskRequestSchema: GenMessage<GetCoinRiskRequest> =
  /*@__PURE__*/
  messageDesc(file_mercury_crypto, 4);

/**
 * @generated from message crypto.GetCoinRiskResponse
 */
export type GetCoinRiskResponse = Message<"crypto.GetCoinRiskResponse"> & {
  /**
   * @generated from field: crypto.BaseResponse base = 1;
   */
  base?: BaseResponse;

  /**
   * @generated from field: crypto.TokenInfo token_info = 2;
   */
  tokenInfo?: TokenInfo;

  /**
   * @generated from field: crypto.RiskFlags risk_flags = 3;
   */
  riskFlags?: RiskFlags;

  /**
   * @generated from field: crypto.HolderInfo holder_info = 4;
   */
  holderInfo?: HolderInfo;

  /**
   * @generated from field: crypto.SocialInfo social_info = 5;
   */
  socialInfo?: SocialInfo;

  /**
   * @generated from field: crypto.MarketInfo market_info = 6;
   */
  marketInfo?: MarketInfo;

  /**
   * @generated from field: crypto.RiskScore risk_score = 7;
   */
  riskScore?: RiskScore;
};

/**
 * Describes the message crypto.GetCoinRiskResponse.
 * Use `create(GetCoinRiskResponseSchema)` to create a new message.
 */
export const GetCoinRiskResponseSchema: GenMessage<GetCoinRiskResponse> =
  /*@__PURE__*/
  messageDesc(file_mercury_crypto, 5);

/**
 * @generated from message crypto.RiskScore
 */
export type RiskScore = Message<"crypto.RiskScore"> & {
  /**
   * out of 100
   *
   * @generated from field: uint32 score = 1;
   */
  score: number;

  /**
   * e.g., "Low Risk", "Medium Risk", "High Risk"
   *
   * @generated from field: string description = 2;
   */
  description: string;
};

/**
 * Describes the message crypto.RiskScore.
 * Use `create(RiskScoreSchema)` to create a new message.
 */
export const RiskScoreSchema: GenMessage<RiskScore> =
  /*@__PURE__*/
  messageDesc(file_mercury_crypto, 6);

/**
 * @generated from message crypto.TokenInfo
 */
export type TokenInfo = Message<"crypto.TokenInfo"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string symbol = 2;
   */
  symbol: string;

  /**
   * @generated from field: string contract_address = 3;
   */
  contractAddress: string;

  /**
   * @generated from field: string logo_url = 4;
   */
  logoUrl: string;

  /**
   * "ethereum", "binance-smart-chain", etc.
   *
   * @generated from field: string chain = 5;
   */
  chain: string;

  /**
   * @generated from field: double total_supply = 6;
   */
  totalSupply: number;

  /**
   * @generated from field: uint32 decimals = 7;
   */
  decimals: number;
};

/**
 * Describes the message crypto.TokenInfo.
 * Use `create(TokenInfoSchema)` to create a new message.
 */
export const TokenInfoSchema: GenMessage<TokenInfo> =
  /*@__PURE__*/
  messageDesc(file_mercury_crypto, 7);

/**
 * @generated from message crypto.RiskFlags
 */
export type RiskFlags = Message<"crypto.RiskFlags"> & {
  /**
   * @generated from field: crypto.RiskFlagFunctions functions = 1;
   */
  functions?: RiskFlagFunctions;

  /**
   * @generated from field: crypto.RiskFlag ownership_renounced = 2;
   */
  ownershipRenounced?: RiskFlag;

  /**
   * @generated from field: crypto.RiskFlag verified_contract = 3;
   */
  verifiedContract?: RiskFlag;

  /**
   * @generated from field: crypto.RiskFlag is_honeypot = 4;
   */
  isHoneypot?: RiskFlag;

  /**
   * @generated from field: crypto.RiskFlag liquidity_locked = 5;
   */
  liquidityLocked?: RiskFlag;

  /**
   * @generated from field: crypto.RiskFlag recent_deployment = 6;
   */
  recentDeployment?: RiskFlag;

  /**
   * @generated from field: crypto.RiskFlag is_proxy = 7;
   */
  isProxy?: RiskFlag;

  /**
   * @generated from field: crypto.RiskFlag is_open_source = 8;
   */
  isOpenSource?: RiskFlag;

  /**
   * @generated from field: crypto.RiskFlag is_anti_whale = 9;
   */
  isAntiWhale?: RiskFlag;

  /**
   * @generated from field: crypto.RiskFlag is_gas_abuser = 10;
   */
  isGasAbuser?: RiskFlag;

  /**
   * optional: summary or human-readable risks
   *
   * @generated from field: string notes = 50;
   */
  notes: string;
};

/**
 * Describes the message crypto.RiskFlags.
 * Use `create(RiskFlagsSchema)` to create a new message.
 */
export const RiskFlagsSchema: GenMessage<RiskFlags> =
  /*@__PURE__*/
  messageDesc(file_mercury_crypto, 8);

/**
 * @generated from message crypto.RiskFlagFunctions
 */
export type RiskFlagFunctions = Message<"crypto.RiskFlagFunctions"> & {
  /**
   * @generated from field: crypto.RiskFlag mint = 1;
   */
  mint?: RiskFlag;

  /**
   * @generated from field: crypto.RiskFlag owner = 2;
   */
  owner?: RiskFlag;

  /**
   * @generated from field: crypto.RiskFlag pause = 3;
   */
  pause?: RiskFlag;

  /**
   * @generated from field: crypto.RiskFlag unpause = 4;
   */
  unpause?: RiskFlag;

  /**
   * @generated from field: crypto.RiskFlag set_fee_percent = 5;
   */
  setFeePercent?: RiskFlag;

  /**
   * @generated from field: crypto.RiskFlag transfer_ownership = 6;
   */
  transferOwnership?: RiskFlag;

  /**
   * @generated from field: crypto.RiskFlag renounce_ownership = 7;
   */
  renounceOwnership?: RiskFlag;

  /**
   * @generated from field: crypto.RiskFlag disable_transfer = 8;
   */
  disableTransfer?: RiskFlag;

  /**
   * @generated from field: crypto.RiskFlag blacklist = 9;
   */
  blacklist?: RiskFlag;

  /**
   * @generated from field: crypto.RiskFlag whitelist = 10;
   */
  whitelist?: RiskFlag;
};

/**
 * Describes the message crypto.RiskFlagFunctions.
 * Use `create(RiskFlagFunctionsSchema)` to create a new message.
 */
export const RiskFlagFunctionsSchema: GenMessage<RiskFlagFunctions> =
  /*@__PURE__*/
  messageDesc(file_mercury_crypto, 9);

/**
 * @generated from message crypto.RiskFlag
 */
export type RiskFlag = Message<"crypto.RiskFlag"> & {
  /**
   * true or false
   *
   * @generated from field: bool value = 1;
   */
  value: boolean;

  /**
   * 0: None, 1: Low, 2: Medium, 3: High
   *
   * @generated from field: uint32 severity = 2;
   */
  severity: number;

  /**
   * optional: reason for the risk flag
   *
   * @generated from field: string reason = 3;
   */
  reason: string;
};

/**
 * Describes the message crypto.RiskFlag.
 * Use `create(RiskFlagSchema)` to create a new message.
 */
export const RiskFlagSchema: GenMessage<RiskFlag> =
  /*@__PURE__*/
  messageDesc(file_mercury_crypto, 10);

/**
 * @generated from message crypto.HolderInfo
 */
export type HolderInfo = Message<"crypto.HolderInfo"> & {
  /**
   * @generated from field: double top_ten_holder_percentage = 1;
   */
  topTenHolderPercentage: number;

  /**
   * @generated from field: repeated crypto.Holder holders = 2;
   */
  holders: Holder[];

  /**
   * @generated from field: double top_ten_lp_holder_percentage = 3;
   */
  topTenLpHolderPercentage: number;

  /**
   * @generated from field: repeated crypto.Holder lp_holders = 4;
   */
  lpHolders: Holder[];

  /**
   * @generated from field: double lp_locked_percentage = 5;
   */
  lpLockedPercentage: number;

  /**
   * @generated from field: double lp_locked_balance = 6;
   */
  lpLockedBalance: number;

  /**
   * @generated from field: double lp_total_balance = 7;
   */
  lpTotalBalance: number;
};

/**
 * Describes the message crypto.HolderInfo.
 * Use `create(HolderInfoSchema)` to create a new message.
 */
export const HolderInfoSchema: GenMessage<HolderInfo> =
  /*@__PURE__*/
  messageDesc(file_mercury_crypto, 11);

/**
 * @generated from message crypto.Holder
 */
export type Holder = Message<"crypto.Holder"> & {
  /**
   * @generated from field: string address = 1;
   */
  address: string;

  /**
   * @generated from field: double percentage = 2;
   */
  percentage: number;

  /**
   * @generated from field: double balance = 3;
   */
  balance: number;

  /**
   * @generated from field: bool is_locked = 4;
   */
  isLocked: boolean;
};

/**
 * Describes the message crypto.Holder.
 * Use `create(HolderSchema)` to create a new message.
 */
export const HolderSchema: GenMessage<Holder> =
  /*@__PURE__*/
  messageDesc(file_mercury_crypto, 12);

/**
 * @generated from message crypto.SocialInfo
 */
export type SocialInfo = Message<"crypto.SocialInfo"> & {
  /**
   * @generated from field: string website = 1;
   */
  website: string;

  /**
   * @generated from field: string github = 2;
   */
  github: string;

  /**
   * @generated from field: string twitter = 3;
   */
  twitter: string;

  /**
   * @generated from field: string reddit = 4;
   */
  reddit: string;

  /**
   * @generated from field: string description = 5;
   */
  description: string;
};

/**
 * Describes the message crypto.SocialInfo.
 * Use `create(SocialInfoSchema)` to create a new message.
 */
export const SocialInfoSchema: GenMessage<SocialInfo> =
  /*@__PURE__*/
  messageDesc(file_mercury_crypto, 13);

/**
 * @generated from message crypto.MarketInfo
 */
export type MarketInfo = Message<"crypto.MarketInfo"> & {
  /**
   * @generated from field: double market_cap = 1;
   */
  marketCap: number;

  /**
   * @generated from field: double volume_24h = 2;
   */
  volume24h: number;

  /**
   * @generated from field: double price = 3;
   */
  price: number;

  /**
   * @generated from field: double price_change_24h = 4;
   */
  priceChange24h: number;

  /**
   * @generated from field: double price_change_percentage_24h = 5;
   */
  priceChangePercentage24h: number;

  /**
   * @generated from field: double circulating_supply = 6;
   */
  circulatingSupply: number;

  /**
   * @generated from field: double total_supply = 7;
   */
  totalSupply: number;

  /**
   * @generated from field: double max_supply = 8;
   */
  maxSupply: number;
};

/**
 * Describes the message crypto.MarketInfo.
 * Use `create(MarketInfoSchema)` to create a new message.
 */
export const MarketInfoSchema: GenMessage<MarketInfo> =
  /*@__PURE__*/
  messageDesc(file_mercury_crypto, 14);

/**
 * @generated from service crypto.MercuryCryptoService
 */
export const MercuryCryptoService: GenService<{
  /**
   * @generated from rpc crypto.MercuryCryptoService.SearchCoin
   */
  searchCoin: {
    methodKind: "unary";
    input: typeof SearchCoinRequestSchema;
    output: typeof SearchCoinResponseSchema;
  };
  /**
   * @generated from rpc crypto.MercuryCryptoService.GetCoinRisk
   */
  getCoinRisk: {
    methodKind: "unary";
    input: typeof GetCoinRiskRequestSchema;
    output: typeof GetCoinRiskResponseSchema;
  };
}> = /*@__PURE__*/ serviceDesc(file_mercury_crypto, 0);
